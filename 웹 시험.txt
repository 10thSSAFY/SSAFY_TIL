<!DOCTYPE html>
- 해당 문서가 html로 문서라는 것을 나타냄

<html></html>
- 전체 페이지의 콘텐츠를 포함

<title></title>
- 브라우저 탭 및 즐겨찾기 시 표시되는 제목으로 사용

<head></head>
- HTML 문서에 관련된 설명, 설정 등
- 사용자에게 보이지 않음

<body></body>
- 페이지에 표시되는 모든 콘텐츠

HTML
HyperText Markup Language
웹페이지의 의미와 구조를 정의하는 언어

<h1>  </h1>
h1 요소는 단순히 텍스트를 크게만 만드는 것이 아닌
현재 문서의 최상위 제목이라는 의미를 부여하는 것

CSS
Cascading Style Sheet
웹 페이지의 디자인과 레이아웃을 구성하는 언어

CSS 구문
선택자: Selector
선언: Declaration
속성: Property
값: Value

CSS 적용 방식
1. 인라인(Inline) 스타일
  - HTML 요소 안에 style 속성 값으로 작성
2. 내부(Internal) 스타일 시트
  - head 태그 안에 style 태그에 작성
3. 외부(External) 스타일 시트
  - 별도의 CSS 파일 생성 후 HTML link 태그를 사용해 불러오기

CSS 선택자
CSS Selectors
HTML 요소를 선택하여 스타일을 적용할 수 있도록 하는 선택자

기본 선택자
  - 전체(*) 선택자
    - HTML 모든 요소를 선택
  - 요소(tag) 선택자
    - 지정한 모든 태그를 선택
  - 클래스(class) 선택자
    - ('.' (dot))주어진 클래스 속성을 가진 모든 요소를 선택
  - 아이디(id) 선택자
    - ('#') 주어진 아이디 속성을 가진 요소 선택
    - 문서에는 주어진 아이디를 가진 요소가 하나만 있어야 함
  - 속성(attr) 선택자 등


결합자 (Combinators)
  - 자손 결합자(" " (space))
  - 자식 결합자(>)

Specificity (우선순위)
동일한 요소에 적용 가능한 같은 스타일을 두 가지 이상 작성했을 때
어떤 규칙이 적용 되는지 결정하는 것

CSS
Cascading Style Sheet
웹 페이지의 디자인과 레이아웃을 구성하는 언어

Cascade 계단식
동일한 우선순위를 갖는 규칙이 적용될 때
CSS에서 마지막에 나오는 규칙이 사용됨

우선순위가 높은 순
1. Importance
  - !important
2. Inline 스타일
3. 선택자
  -  id 선택자 > class 선택자 > 요소 선택자
4. 소스 코드 순서

CSS 상속
기본적으로 CSS는 상속을 통해 부모 요소의 속성을
자식에게 상속해 재사용성을 높임

CSS Box Model
모든 HTML 요소를 사각형 박스로 표현하는 개념
내용(content), 안쪽 여백(padding), 테두리(border), 외부 간격(margin)으로 구성되는 개념

Margin: 박스와 다른 요소 사이의 공백, 가장 바깥쪽 영역
Border: 콘텐츠와 패딩을 감싸는 테두리 영역
Padding: 콘텐츠 주위에 위치하는 공백 영역
Content: 콘텐츠가 표시되는 영역

* {
  box-sizing: content-box;
}

* {
  box-sizing: border-box;
}

.index {
  display: block;
}

.index {
  display: inline;
}

속성에 따른 수평 정렬
margin-right: auto;
text-align: left;

margin-left: auto;
text-align: right;

margin-left: auto;
margin-right: auto;
text-align: center;\

기타 display 속성
1. inline-block
  - inline과 block 요소 사이의 중간 지점을 제공하는 diaplay값
  - padding, margin 및 border 로 인해 다른 요소가 밀려남
2. none
  - 요소를 화면에 표시하지 않고, 공간조차 부여되지 않음

CSS Layout
각 요소의 위치와 크기를 조정하여 웹 페이지의 디자인을 결정하는 것

CSS Position
요소를 Normal Flow에서 제거하여 다른 위치로 배치하는 것

Position 유형
1. static
  - 기본값
  - 요소를 Normal Flow에 따라 배치
2. relative
  - 요소를 Normal Flow에 따라 배치
  - 자기 자신을 기준으로 이동
  - 요소가 차지하는 공간은 static일 때와 같음
3. absolute
  - 요소를 Normal Flow에서 제거
  - 가장 가까운 relative 부모 요소를 기준으로 이동
  - 문서에서 요소가 차지하는 공간이 없어짐
4. fixed
  - 요소를 Normal Flow에서 제거
  - 현재 화면영역(viewport)을 기준으로 이동
  - 문서에서 요소 차지하는 공간이 없어짐
5. sticky 
  - 요소를 Normal Flow에 따라 배치
  - 요소가 일반적인 문서 흐름에 따라 배치되다가 스크롤이 특정 임계점에 도달하면 그 위치에 고정됨
  - 만약 다음 sticky 요소가 나오면 다음 sticky 요소가 이전 stikcy 요소의 자리르 대체
    - 이전 sticky 요소가 고정되어 있던 위치와 다음 sticky 요소가 고정되어야 할 위치가 겹치기 때문

Flexbox 기본 사항
- main axis (주 축)
  - flex item들이 배치되는 기본 축
  - main start에서 시작하여 main end 방향으로 배치

- cross axis (교차 축)
  - main axis에 수직인 축
  - cross start에서 시작하여 cross end 방향으로 배치

- Flex Container
  - display: flex; 혹은 display: inline-flex; 가 설정된 부모 요소
  - 이 컨테이너의 1차 자식 요소들이 Flex Item이 됨
  - flexbox 속성 값들을 사용하여 자식 요소 Flex Item들을 배치

- Flex Item
  - Flex Container 내부에 레이아웃 되는 항목

레이아웃 구성
1. Flex Container 지정
- flex item은 기본적으로 행으로 나열
- flex item은 주축의 시작 선에서 시작
- flex item은 교차축의 크기를 채우기 위해 늘어남
.container {
  height: 500px;
  border: 1px solid black;
  display: flex;
}

2. flex-direction 지정
- 
.container {
  flex-direction: column-reverse;
}

3. flex-warp
.container {
  flex-wrap: wrap;
}

4. justify-content
.container {
  flex-wrap: wrap;

  justify-content: flex-start;
  justify-content: center;
  justify-content: flex-end;
}

5. align-content
.container {
  flex-wrap: wrap;

  align-content: flex-start;
  align-content: center;
  align-content: flex-end;
}

6. align-items
.container {
  align-items: center;
}

7. align-self
.item1 {
  align-self: center;
}
.item2 {
  align-self: flex-end;
}


flex-grow
.item-1 {
  flex-grow: 1;
}
.item-2 {
  flex-grow: 2;
}
.item-3 {
  flex-grow: 3;
}

flex-basis
.item-1 {
  flex-basis: 1;
}
.item-2 {
  flex-basis: 2;
}
.item-3 {
  flex-basis: 3;
}


justify-content
4) space-between
5) space-around
6) space-evenly


부트스트랩 대표 Component 사용해복
- Alert
- Badges
- Buttons
- Cards
- Navbar
